<?php

namespace PebbleAuthClient\Datatypes;

class PebbleTokenData {
    /**
     * Application for which the token is generated
     */
    public array|string $aud;

    /**
     * Expiration timestamp
     */
    public int $exp;

    /**
     * Issued at time (timestamp)
     */
    public ?int $iat;

    /**
     * Issuer : Licence ID that emit the token
     */
    public string $iss;

    /**
     * From 1-6 : user level affected by the licence
     */
    public ?int $lv;

    /**
     * Display name for the user
     */
    public ?string $name;

    /**
     * Roles attributed to the user
     */
    public ?array $roles;

    /**
     * List of scope granted by the token onto the audience. Each term is separated by a space.
     */
    public ?string $scope;

    /**
     * User email (used as username)
     */
    public string $sub;

    /**
     * Tenant ID : customer id, client id... that will consume resources
     */
    public ?string $tid;

    /**
     * Token unique ID generated by authentication server
     */
    public string $jti;

    /**
     * The application ID registered in firestore. This refers to the frontend application that consume the resources.
     */
    public string $client_id;

    /**
     * Token from which datas has been deserialized
     */
    public string $token;

    public function __construct(array $values) {
        foreach ($values as $key => $val) {
            if (property_exists($this, $key)) {
                $this->$key = $val;
            }
        }
    }
}